#--------------------------------------------------------------------------------------------------
# STAGES
#--------------------------------------------------------------------------------------------------
# build:        build docker image
# deploy:       deploy application to environment
# test:         run tests on deployed environment
# posttest:     confirm or rollback
# final:        remove environment / deploy to production

stages:
  - build
  - deploy
  - codeanalyse
  - test
  - posttest
  - rollout
  - postrollout

variables:
  HTTP_URL: $CI_COMMIT_REF_SLUG.develop.nevercodealone.de
  RANCHER_PROJECT_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  TOOLBOX_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/toolbox:$CI_PIPELINE_ID
  WEB_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG:$CI_PIPELINE_ID
  WEBDRIVER_URL: rancher.nevercodealone.de
  WEBSITE_URL: https://$CI_COMMIT_REF_SLUG.develop.nevercodealone.de


#--------------------------------------------------------------------------------------------------
# JOBS
#--------------------------------------------------------------------------------------------------

# Stage: build
build_development_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $WEB_IMAGE --target webserver --pull .
    - docker push $WEB_IMAGE
  tags:
    - docker-executor
  except:
    - master

build_production_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $WEB_IMAGE --target webserver --pull --build-arg APP_ENV=prod .
    - docker push $WEB_IMAGE
  tags:
    - docker-executor
  only:
    - master

build_toolbox_image:
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $TOOLBOX_IMAGE --target toolbox --pull .
    - docker push $TOOLBOX_IMAGE
  tags:
    - docker-executor

# Stage: deploy
deploy_development_image_to_branch:
  stage: deploy
  image: $TOOLBOX_IMAGE
  before_script:
    - rancher rm --type stack --stop $RANCHER_PROJECT_NAME || true
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d --pull
    - sleep 10
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d --pull
  after_script:
    - rancher exec -t www-nevercodealone-de/db /bin/bash -c 'mysqldump -p`cat $MYSQL_ROOT_PASSWORD_FILE` --opt --single-transaction nca_sulu > /docker-entrypoint-initdb.d/nca_sulu.sql' || true
    - rancher exec -t www-nevercodealone-de/web /bin/bash -c 'rm -rf /var/www/transfer/*' || true
    - rancher exec -t www-nevercodealone-de/web /bin/bash -c 'mkdir /var/www/transfer/var; cp -a /var/www/html/var/uploads /var/www/transfer/var/; cp -a /var/www/html/uploads /var/www/transfer/' || true
    - rancher exec -t $RANCHER_PROJECT_NAME/web /bin/bash -c 'rm -rf /var/www/html/var/*' || true
    - rancher exec -t $RANCHER_PROJECT_NAME/web /bin/bash -c 'cp -a /var/www/transfer/var/uploads /var/www/html/var/' || true
    - rancher exec -t $RANCHER_PROJECT_NAME/web /bin/bash -c 'cp -a /var/www/transfer/uploads /var/www/html/' || true
    - rancher exec -t $RANCHER_PROJECT_NAME/web /bin/bash -c 'chown www-data.www-data -R /var/www/html/' || true
    - sleep 180s
  tags:
    - docker-executor
  except:
    - master

deploy_production_image_to_stage:
  stage: deploy
  image: $TOOLBOX_IMAGE
  variables:
    HTTP_URL: stage-cms.nevercodealone.de
  before_script:
    - rancher rm --type stack --stop stage-cms-nevercodealone-de || true
  script:
    - rancher up -s stage-cms-nevercodealone-de -f docker-compose.rancher.yml -d --pull
    - sleep 10
    - rancher up -s stage-cms-nevercodealone-de -f docker-compose.rancher.yml -d --pull
  after_script:
    - rancher exec -t www-nevercodealone-de/db /bin/bash -c 'mysqldump -p`cat $MYSQL_ROOT_PASSWORD_FILE` --opt --single-transaction nca_sulu > /docker-entrypoint-initdb.d/nca_sulu.sql' || true
    - rancher exec -t www-nevercodealone-de/web /bin/bash -c 'rm -rf /var/www/transfer/*' || true
    - rancher exec -t www-nevercodealone-de/web /bin/bash -c 'mkdir /var/www/transfer/var; cp -a /var/www/html/var/uploads /var/www/transfer/var/; cp -a /var/www/html/uploads /var/www/transfer/' || true
    - rancher exec -t stage-cms-nevercodealone-de/web /bin/bash -c 'rm -rf /var/www/html/var/*' || true
    - rancher exec -t stage-cms-nevercodealone-de/web /bin/bash -c 'cp -a /var/www/transfer/var/uploads /var/www/html/var/' || true
    - rancher exec -t stage-cms-nevercodealone-de/web /bin/bash -c 'cp -a /var/www/transfer/uploads /var/www/html/' || true
    - rancher exec -t stage-cms-nevercodealone-de/web /bin/bash -c 'chown www-data.www-data -R /var/www/html/' || true
    - sleep 180s
  tags:
    - docker-executor
  only:
    - master

# Stage: test
phpstan_code_analyses_against_dev_environment:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/phpstan analyse src -c phpstan.neon
  tags:
    - docker-executor
  except:
    - master

phpcs_code_analyses_against_dev_environment:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/phpcs
  tags:
    - docker-executor
  except:
    - master

xml_code_analyses_against_dev_environment:
  stage: codeanalyse
  image: $TOOLBOX_IMAGE
  script:
    - /var/www/html/vendor/bin/xmllint config -v
  tags:
    - docker-executor
  except:
    - master

run_tests_against_dev_environment:
  stage: test
  image: $TOOLBOX_IMAGE
  script:
    - export SYMFONY_DEPRECATIONS_HELPER=disabled codecept run
    - /var/www/html/vendor/bin/codecept run --skip acceptance --html --skip-group db -vvv
  artifacts:
    when: always
    paths:
      - ./tests/_output/*
    expire_in: 1 week
  tags:
    - docker-executor
  except:
    - master

run_tests_against_final_prod_environment:
  stage: test
  image: $TOOLBOX_IMAGE
  variables:
    WEBSITE_URL: https://stage-cms.nevercodealone.de
  script:
    - export SYMFONY_DEPRECATIONS_HELPER=disabled codecept run
    - /var/www/html/vendor/bin/codecept run acceptance --html --skip-group db -vvv
  artifacts:
    when: always
    paths:
      - /builds/nevercodealone/sulu/tests/_output/*
    expire_in: 1 week
  tags:
    - docker-executor
  only:
    - master

# Stage: posttest
deploy_production_image_to_prod:
  stage: rollout
  image: $TOOLBOX_IMAGE
  variables:
    HTTP_URL: nevercodealone.de
  script:
    - rancher up -s www-nevercodealone-de -f docker-compose.rancher.yml  -d --pull --prune --upgrade
  tags:
    - docker-executor
  only:
    - master
  when: manual

# Stage: postrollout
confirm_upgrade:
  image: $TOOLBOX_IMAGE
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d $RANCHER_OPTIONS
  after_script:
    - rancher exec -t www-nevercodealone-de/web /bin/bash -c 'rm -rf /var/www/html/var/cache' || true
  tags:
    - docker-executor
  stage: postrollout
  variables:
    RANCHER_OPTIONS: --confirm-upgrade
    RANCHER_PROJECT_NAME: www-nevercodealone-de
  only:
    - master
  when: manual

rollback_upgrade:
  image: $TOOLBOX_IMAGE
  script:
    - rancher up -s $RANCHER_PROJECT_NAME -f docker-compose.rancher.yml -d $RANCHER_OPTIONS
  tags:
    - docker-executor
  stage: postrollout
  variables:
    RANCHER_OPTIONS: --rollback
    RANCHER_PROJECT_NAME: www-nevercodealone-de
  only:
    - master
  when: manual
